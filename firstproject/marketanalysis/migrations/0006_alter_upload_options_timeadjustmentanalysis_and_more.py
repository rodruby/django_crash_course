# Generated by Django 5.2.5 on 2025-09-16 00:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("marketanalysis", "0005_sale_upload"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="upload",
            options={"ordering": ["-uploaded_at"]},
        ),
        migrations.CreateModel(
            name="TimeAdjustmentAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(help_text="The appraisal effective date"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("results", models.JSONField(blank=True, default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_adjustments",
                        to="marketanalysis.upload",
                    ),
                ),
            ],
            options={
                "verbose_name": "Time Adjustment Analysis",
                "verbose_name_plural": "Time Adjustment Analyses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ComparableSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sale_date",
                    models.DateField(help_text="The sale date of the comparable"),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Sale price of the comparable property",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "square_footage",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Living area square footage (optional)",
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Property address (optional)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "monthly_price_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Monthly median price adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "monthly_psf_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Monthly median PSF adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "linear_price_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Linear trendline price adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "linear_psf_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Linear trendline PSF adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "polynomial_price_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Polynomial trendline price adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "polynomial_psf_adjustment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Polynomial trendline PSF adjustment (%)",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comparable_sales",
                        to="marketanalysis.timeadjustmentanalysis",
                    ),
                ),
            ],
            options={
                "ordering": ["sale_date"],
            },
        ),
    ]
